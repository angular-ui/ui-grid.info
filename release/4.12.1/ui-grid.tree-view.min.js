/*! For license information please see ui-grid.tree-view.min.js.LICENSE.txt */
(()=>{var e={494:()=>{!function(){"use strict";var e=angular.module("ui.grid.treeView",["ui.grid","ui.grid.treeBase"]);e.constant("uiGridTreeViewConstants",{featureName:"treeView",rowHeaderColName:"treeBaseRowHeaderCol",EXPANDED:"expanded",COLLAPSED:"collapsed",aggregation:{COUNT:"count",SUM:"sum",MAX:"max",MIN:"min",AVG:"avg"}}),e.service("uiGridTreeViewService",["$q","uiGridTreeViewConstants","uiGridTreeBaseConstants","uiGridTreeBaseService","gridUtil","GridRow","gridClassFactory","i18nService","uiGridConstants",function(e,i,r,t,n,o,a,s,u){var d={initializeGrid:function(e,i){t.initializeGrid(e,i),e.treeView={},e.registerRowsProcessor(d.adjustSorting,60);var r={treeView:{}},n={treeView:{}};e.api.registerEventsFromObject(r),e.api.registerMethodsFromObject(n)},defaultGridOptions:function(e){e.enableTreeView=!1!==e.enableTreeView},adjustSorting:function(e){return this.columns.forEach((function(e){e.sort&&(e.sort.ignoreSort=!0)})),e}};return d}]),e.directive("uiGridTreeView",["uiGridTreeViewConstants","uiGridTreeViewService","$templateCache",function(e,i,r){return{replace:!0,priority:0,require:"^uiGrid",scope:!1,compile:function(){return{pre:function(e,r,t,n){!1!==n.grid.options.enableTreeView&&i.initializeGrid(n.grid,e)},post:function(e,i,r,t){}}}}}])}()}},i={};function r(t){var n=i[t];if(void 0!==n)return n.exports;var o=i[t]={exports:{}};return e[t](o,o.exports,r),o.exports}r(494)})();